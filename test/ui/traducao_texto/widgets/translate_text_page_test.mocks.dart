// Mocks generated by Mockito 5.4.6 from annotations
// in app/test/ui/traducao_texto/widgets/translate_text_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:app/data/repositories/language/language_repository.dart'
    as _i12;
import 'package:app/models/language.dart' as _i11;
import 'package:app/providers/auth_provider.dart' as _i4;
import 'package:app/providers/languages_provider.dart' as _i10;
import 'package:app/ui/core/shared/dropdown/dropdown_button_controller.dart'
    as _i2;
import 'package:app/ui/traducao_texto/view_model/translate_text_view_model.dart'
    as _i7;
import 'package:flutter/services.dart' as _i9;
import 'package:flutter_tts/flutter_tts.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDropdownButtonController_0<T> extends _i1.SmartFake
    implements _i2.DropdownButtonController<T> {
  _FakeDropdownButtonController_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSpeechRateValidRange_1 extends _i1.SmartFake
    implements _i3.SpeechRateValidRange {
  _FakeSpeechRateValidRange_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i4.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
          )
          as bool);

  @override
  bool get isGoogleLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isGoogleLoading),
            returnValue: false,
          )
          as bool);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get isAuthenticating =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticating),
            returnValue: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> signUp({
    required String? name,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #name: name,
              #email: email,
              #password: password,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> verifyCode({required String? code}) =>
      (super.noSuchMethod(
            Invocation.method(#verifyCode, [], {#code: code}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resendCode({required String? code}) =>
      (super.noSuchMethod(
            Invocation.method(#resendCode, [], {#code: code}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TranslateTextViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockTranslateTextViewModel extends _i1.Mock
    implements _i7.TranslateTextViewModel {
  MockTranslateTextViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DropdownButtonController<dynamic> get fromlanguageController =>
      (super.noSuchMethod(
            Invocation.getter(#fromlanguageController),
            returnValue: _FakeDropdownButtonController_0<dynamic>(
              this,
              Invocation.getter(#fromlanguageController),
            ),
          )
          as _i2.DropdownButtonController<dynamic>);

  @override
  _i2.DropdownButtonController<dynamic> get tolanguageController =>
      (super.noSuchMethod(
            Invocation.getter(#tolanguageController),
            returnValue: _FakeDropdownButtonController_0<dynamic>(
              this,
              Invocation.getter(#tolanguageController),
            ),
          )
          as _i2.DropdownButtonController<dynamic>);

  @override
  set fromlanguageController(
    _i2.DropdownButtonController<dynamic>? _fromlanguageController,
  ) => super.noSuchMethod(
    Invocation.setter(#fromlanguageController, _fromlanguageController),
    returnValueForMissingStub: null,
  );

  @override
  set tolanguageController(
    _i2.DropdownButtonController<dynamic>? _tolanguageController,
  ) => super.noSuchMethod(
    Invocation.setter(#tolanguageController, _tolanguageController),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<String> translateText(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#translateText, [text]),
            returnValue: _i5.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#translateText, [text]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  void swapLanguages() => super.noSuchMethod(
    Invocation.method(#swapLanguages, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [FlutterTts].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterTts extends _i1.Mock implements _i3.FlutterTts {
  MockFlutterTts() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<int?> get getMaxSpeechInputLength =>
      (super.noSuchMethod(
            Invocation.getter(#getMaxSpeechInputLength),
            returnValue: _i5.Future<int?>.value(),
          )
          as _i5.Future<int?>);

  @override
  _i5.Future<dynamic> get getLanguages =>
      (super.noSuchMethod(
            Invocation.getter(#getLanguages),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getEngines =>
      (super.noSuchMethod(
            Invocation.getter(#getEngines),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getDefaultEngine =>
      (super.noSuchMethod(
            Invocation.getter(#getDefaultEngine),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getDefaultVoice =>
      (super.noSuchMethod(
            Invocation.getter(#getDefaultVoice),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getVoices =>
      (super.noSuchMethod(
            Invocation.getter(#getVoices),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<_i3.SpeechRateValidRange> get getSpeechRateValidRange =>
      (super.noSuchMethod(
            Invocation.getter(#getSpeechRateValidRange),
            returnValue: _i5.Future<_i3.SpeechRateValidRange>.value(
              _FakeSpeechRateValidRange_1(
                this,
                Invocation.getter(#getSpeechRateValidRange),
              ),
            ),
          )
          as _i5.Future<_i3.SpeechRateValidRange>);

  @override
  set startHandler(_i6.VoidCallback? _startHandler) => super.noSuchMethod(
    Invocation.setter(#startHandler, _startHandler),
    returnValueForMissingStub: null,
  );

  @override
  set initHandler(_i6.VoidCallback? _initHandler) => super.noSuchMethod(
    Invocation.setter(#initHandler, _initHandler),
    returnValueForMissingStub: null,
  );

  @override
  set completionHandler(_i6.VoidCallback? _completionHandler) =>
      super.noSuchMethod(
        Invocation.setter(#completionHandler, _completionHandler),
        returnValueForMissingStub: null,
      );

  @override
  set pauseHandler(_i6.VoidCallback? _pauseHandler) => super.noSuchMethod(
    Invocation.setter(#pauseHandler, _pauseHandler),
    returnValueForMissingStub: null,
  );

  @override
  set continueHandler(_i6.VoidCallback? _continueHandler) => super.noSuchMethod(
    Invocation.setter(#continueHandler, _continueHandler),
    returnValueForMissingStub: null,
  );

  @override
  set cancelHandler(_i6.VoidCallback? _cancelHandler) => super.noSuchMethod(
    Invocation.setter(#cancelHandler, _cancelHandler),
    returnValueForMissingStub: null,
  );

  @override
  set progressHandler(_i3.ProgressHandler? _progressHandler) =>
      super.noSuchMethod(
        Invocation.setter(#progressHandler, _progressHandler),
        returnValueForMissingStub: null,
      );

  @override
  set errorHandler(_i3.ErrorHandler? _errorHandler) => super.noSuchMethod(
    Invocation.setter(#errorHandler, _errorHandler),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<dynamic> awaitSpeakCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
            Invocation.method(#awaitSpeakCompletion, [awaitCompletion]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> awaitSynthCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
            Invocation.method(#awaitSynthCompletion, [awaitCompletion]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> speak(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#speak, [text]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> pause() =>
      (super.noSuchMethod(
            Invocation.method(#pause, []),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> synthesizeToFile(String? text, String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#synthesizeToFile, [text, fileName]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setLanguage(String? language) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguage, [language]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setSpeechRate(double? rate) =>
      (super.noSuchMethod(
            Invocation.method(#setSpeechRate, [rate]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setVolume(double? volume) =>
      (super.noSuchMethod(
            Invocation.method(#setVolume, [volume]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setSharedInstance(bool? sharedSession) =>
      (super.noSuchMethod(
            Invocation.method(#setSharedInstance, [sharedSession]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> autoStopSharedSession(bool? autoStop) =>
      (super.noSuchMethod(
            Invocation.method(#autoStopSharedSession, [autoStop]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setIosAudioCategory(
    _i3.IosTextToSpeechAudioCategory? category,
    List<_i3.IosTextToSpeechAudioCategoryOptions>? options, [
    _i3.IosTextToSpeechAudioMode? mode =
        _i3.IosTextToSpeechAudioMode.defaultMode,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#setIosAudioCategory, [category, options, mode]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setEngine(String? engine) =>
      (super.noSuchMethod(
            Invocation.method(#setEngine, [engine]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setPitch(double? pitch) =>
      (super.noSuchMethod(
            Invocation.method(#setPitch, [pitch]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setVoice(Map<String, String>? voice) =>
      (super.noSuchMethod(
            Invocation.method(#setVoice, [voice]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> stop() =>
      (super.noSuchMethod(
            Invocation.method(#stop, []),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> isLanguageAvailable(String? language) =>
      (super.noSuchMethod(
            Invocation.method(#isLanguageAvailable, [language]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> isLanguageInstalled(String? language) =>
      (super.noSuchMethod(
            Invocation.method(#isLanguageInstalled, [language]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> areLanguagesInstalled(List<String>? languages) =>
      (super.noSuchMethod(
            Invocation.method(#areLanguagesInstalled, [languages]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setSilence(int? timems) =>
      (super.noSuchMethod(
            Invocation.method(#setSilence, [timems]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setQueueMode(int? queueMode) =>
      (super.noSuchMethod(
            Invocation.method(#setQueueMode, [queueMode]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  void setStartHandler(_i6.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setStartHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setInitHandler(_i6.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setInitHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setCompletionHandler(_i6.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setCompletionHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setContinueHandler(_i6.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setContinueHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setPauseHandler(_i6.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setPauseHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setCancelHandler(_i6.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setCancelHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setProgressHandler(_i3.ProgressHandler? callback) => super.noSuchMethod(
    Invocation.method(#setProgressHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setErrorHandler(_i3.ErrorHandler? handler) => super.noSuchMethod(
    Invocation.method(#setErrorHandler, [handler]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<dynamic> platformCallHandler(_i9.MethodCall? call) =>
      (super.noSuchMethod(
            Invocation.method(#platformCallHandler, [call]),
            returnValue: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);
}

/// A class which mocks [LanguagesProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguagesProvider extends _i1.Mock implements _i10.LanguagesProvider {
  MockLanguagesProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i11.Language> get languages =>
      (super.noSuchMethod(
            Invocation.getter(#languages),
            returnValue: <_i11.Language>[],
          )
          as List<_i11.Language>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> getAllLanguages() =>
      (super.noSuchMethod(
            Invocation.method(#getAllLanguages, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [LanguageRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguageRepositoryImpl extends _i1.Mock
    implements _i12.LanguageRepositoryImpl {
  MockLanguageRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i11.Language>> getAllLanguages() =>
      (super.noSuchMethod(
            Invocation.method(#getAllLanguages, []),
            returnValue: _i5.Future<List<_i11.Language>>.value(
              <_i11.Language>[],
            ),
          )
          as _i5.Future<List<_i11.Language>>);
}
