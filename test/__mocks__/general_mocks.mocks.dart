// Mocks generated by Mockito 5.4.6 from annotations
// in app/test/__mocks__/general_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i15;

import 'package:app/data/repositories/auth/auth_repository.dart' as _i9;
import 'package:app/data/repositories/language/language_repository.dart'
    as _i22;
import 'package:app/data/repositories/trail/trail_repository.dart' as _i23;
import 'package:app/data/repositories/translate/translate_repository.dart'
    as _i16;
import 'package:app/data/services/google_auth.dart' as _i10;
import 'package:app/data/services/http.dart' as _i12;
import 'package:app/data/services/secure_storage.dart' as _i11;
import 'package:app/models/language.dart' as _i21;
import 'package:app/models/trail/trail.dart' as _i25;
import 'package:app/models/trail/trail_info.dart' as _i8;
import 'package:app/models/trail/trail_request.dart' as _i24;
import 'package:app/models/translate/translate.dart' as _i5;
import 'package:app/models/translate/translate_text_request.dart' as _i17;
import 'package:app/models/user.dart' as _i2;
import 'package:app/providers/auth_provider.dart' as _i14;
import 'package:app/providers/languages_provider.dart' as _i20;
import 'package:app/ui/core/shared/dropdown/dropdown_button_controller.dart'
    as _i6;
import 'package:app/ui/traducao_texto/view_model/translate_text_view_model.dart'
    as _i18;
import 'package:flutter/services.dart' as _i19;
import 'package:flutter_tts/flutter_tts.dart' as _i7;
import 'package:google_sign_in/google_sign_in.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_1<T1> extends _i1.SmartFake implements _i3.Future<T1> {
  _FakeFuture_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoogleSignInAuthentication_2 extends _i1.SmartFake
    implements _i4.GoogleSignInAuthentication {
  _FakeGoogleSignInAuthentication_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTranslate_3 extends _i1.SmartFake implements _i5.Translate {
  _FakeTranslate_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDropdownButtonController_4<T> extends _i1.SmartFake
    implements _i6.DropdownButtonController<T> {
  _FakeDropdownButtonController_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSpeechRateValidRange_5 extends _i1.SmartFake
    implements _i7.SpeechRateValidRange {
  _FakeSpeechRateValidRange_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTrailInfo_6 extends _i1.SmartFake implements _i8.TrailInfo {
  _FakeTrailInfo_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepositoryImpl extends _i1.Mock
    implements _i9.AuthRepositoryImpl {
  MockAuthRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.User> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i3.Future<_i2.User>.value(
              _FakeUser_0(this, Invocation.method(#signInWithGoogle, [])),
            ),
          )
          as _i3.Future<_i2.User>);

  @override
  _i3.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.User> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i3.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#signIn, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.User>);

  @override
  _i3.Future<_i2.User> signUp({
    required String? name,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #name: name,
              #email: email,
              #password: password,
            }),
            returnValue: _i3.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#signUp, [], {
                  #name: name,
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.User>);

  @override
  _i3.Future<_i2.User?> me() =>
      (super.noSuchMethod(
            Invocation.method(#me, []),
            returnValue: _i3.Future<_i2.User?>.value(),
          )
          as _i3.Future<_i2.User?>);

  @override
  _i3.Future<_i2.User> verifyCode({required String? code}) =>
      (super.noSuchMethod(
            Invocation.method(#verifyCode, [], {#code: code}),
            returnValue: _i3.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#verifyCode, [], {#code: code}),
              ),
            ),
          )
          as _i3.Future<_i2.User>);

  @override
  _i3.Future<void> resendCode({required String? code}) =>
      (super.noSuchMethod(
            Invocation.method(#resendCode, [], {#code: code}),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [GoogleAuthImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleAuthImpl extends _i1.Mock implements _i10.GoogleAuthImpl {
  MockGoogleAuthImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.GoogleSignInAccount?> signIn() =>
      (super.noSuchMethod(
            Invocation.method(#signIn, []),
            returnValue: _i3.Future<_i4.GoogleSignInAccount?>.value(),
          )
          as _i3.Future<_i4.GoogleSignInAccount?>);

  @override
  _i3.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [SecureStorageImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageImpl extends _i1.Mock implements _i11.SecureStorageImpl {
  MockSecureStorageImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> write(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#write, [key, value]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String?> read(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#read, [key]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<void> delete(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [key]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [HttpServiceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpServiceImpl extends _i1.Mock implements _i12.HttpServiceImpl {
  MockHttpServiceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<T> post<T>(String? path, Map<String, dynamic>? body) =>
      (super.noSuchMethod(
            Invocation.method(#post, [path, body]),
            returnValue:
                _i13.ifNotNull(
                  _i13.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#post, [path, body]),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(this, Invocation.method(#post, [path, body])),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<T> postMultipart<T>(
    String? path,
    Map<String, dynamic>? fields,
    Map<String, List<int>>? files,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#postMultipart, [path, fields, files]),
            returnValue:
                _i13.ifNotNull(
                  _i13.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#postMultipart, [path, fields, files]),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(
                  this,
                  Invocation.method(#postMultipart, [path, fields, files]),
                ),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<T> get<T>(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#get, [path]),
            returnValue:
                _i13.ifNotNull(
                  _i13.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#get, [path]),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(this, Invocation.method(#get, [path])),
          )
          as _i3.Future<T>);

  @override
  _i3.Future<void> delete(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [path]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<T> put<T>(String? path, Map<String, dynamic>? body) =>
      (super.noSuchMethod(
            Invocation.method(#put, [path, body]),
            returnValue:
                _i13.ifNotNull(
                  _i13.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#put, [path, body]),
                  ),
                  (T v) => _i3.Future<T>.value(v),
                ) ??
                _FakeFuture_1<T>(this, Invocation.method(#put, [path, body])),
          )
          as _i3.Future<T>);
}

/// A class which mocks [GoogleSignInAccount].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockGoogleSignInAccount extends _i1.Mock
    implements _i4.GoogleSignInAccount {
  MockGoogleSignInAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get email =>
      (super.noSuchMethod(
            Invocation.getter(#email),
            returnValue: _i13.dummyValue<String>(
              this,
              Invocation.getter(#email),
            ),
          )
          as String);

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i13.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  _i3.Future<_i4.GoogleSignInAuthentication> get authentication =>
      (super.noSuchMethod(
            Invocation.getter(#authentication),
            returnValue: _i3.Future<_i4.GoogleSignInAuthentication>.value(
              _FakeGoogleSignInAuthentication_2(
                this,
                Invocation.getter(#authentication),
              ),
            ),
          )
          as _i3.Future<_i4.GoogleSignInAuthentication>);

  @override
  _i3.Future<Map<String, String>> get authHeaders =>
      (super.noSuchMethod(
            Invocation.getter(#authHeaders),
            returnValue: _i3.Future<Map<String, String>>.value(
              <String, String>{},
            ),
          )
          as _i3.Future<Map<String, String>>);

  @override
  _i3.Future<void> clearAuthCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearAuthCache, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [GoogleSignInAuthentication].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInAuthentication extends _i1.Mock
    implements _i4.GoogleSignInAuthentication {
  MockGoogleSignInAuthentication() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [AuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthProvider extends _i1.Mock implements _i14.AuthProvider {
  MockAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAuthenticated =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticated),
            returnValue: false,
          )
          as bool);

  @override
  bool get isGoogleLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isGoogleLoading),
            returnValue: false,
          )
          as bool);

  @override
  bool get isAuthenticating =>
      (super.noSuchMethod(
            Invocation.getter(#isAuthenticating),
            returnValue: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i3.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> signUp({
    required String? name,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #name: name,
              #email: email,
              #password: password,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> verifyCode({required String? code}) =>
      (super.noSuchMethod(
            Invocation.method(#verifyCode, [], {#code: code}),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> resendCode({required String? code}) =>
      (super.noSuchMethod(
            Invocation.method(#resendCode, [], {#code: code}),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  void addListener(_i15.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i15.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [TranslateRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTranslateRepositoryImpl extends _i1.Mock
    implements _i16.TranslateRepositoryImpl {
  MockTranslateRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i5.Translate> create(
    _i17.TranslateTextRequest? translateRequest,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#create, [translateRequest]),
            returnValue: _i3.Future<_i5.Translate>.value(
              _FakeTranslate_3(
                this,
                Invocation.method(#create, [translateRequest]),
              ),
            ),
          )
          as _i3.Future<_i5.Translate>);
}

/// A class which mocks [TranslateTextViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockTranslateTextViewModel extends _i1.Mock
    implements _i18.TranslateTextViewModel {
  MockTranslateTextViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.DropdownButtonController<dynamic> get fromlanguageController =>
      (super.noSuchMethod(
            Invocation.getter(#fromlanguageController),
            returnValue: _FakeDropdownButtonController_4<dynamic>(
              this,
              Invocation.getter(#fromlanguageController),
            ),
          )
          as _i6.DropdownButtonController<dynamic>);

  @override
  _i6.DropdownButtonController<dynamic> get tolanguageController =>
      (super.noSuchMethod(
            Invocation.getter(#tolanguageController),
            returnValue: _FakeDropdownButtonController_4<dynamic>(
              this,
              Invocation.getter(#tolanguageController),
            ),
          )
          as _i6.DropdownButtonController<dynamic>);

  @override
  set fromlanguageController(
    _i6.DropdownButtonController<dynamic>? _fromlanguageController,
  ) => super.noSuchMethod(
    Invocation.setter(#fromlanguageController, _fromlanguageController),
    returnValueForMissingStub: null,
  );

  @override
  set tolanguageController(
    _i6.DropdownButtonController<dynamic>? _tolanguageController,
  ) => super.noSuchMethod(
    Invocation.setter(#tolanguageController, _tolanguageController),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i3.Future<String> translateText(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#translateText, [text]),
            returnValue: _i3.Future<String>.value(
              _i13.dummyValue<String>(
                this,
                Invocation.method(#translateText, [text]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  void swapLanguages() => super.noSuchMethod(
    Invocation.method(#swapLanguages, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i15.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i15.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [FlutterTts].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterTts extends _i1.Mock implements _i7.FlutterTts {
  MockFlutterTts() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int?> get getMaxSpeechInputLength =>
      (super.noSuchMethod(
            Invocation.getter(#getMaxSpeechInputLength),
            returnValue: _i3.Future<int?>.value(),
          )
          as _i3.Future<int?>);

  @override
  _i3.Future<dynamic> get getLanguages =>
      (super.noSuchMethod(
            Invocation.getter(#getLanguages),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> get getEngines =>
      (super.noSuchMethod(
            Invocation.getter(#getEngines),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> get getDefaultEngine =>
      (super.noSuchMethod(
            Invocation.getter(#getDefaultEngine),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> get getDefaultVoice =>
      (super.noSuchMethod(
            Invocation.getter(#getDefaultVoice),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> get getVoices =>
      (super.noSuchMethod(
            Invocation.getter(#getVoices),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<_i7.SpeechRateValidRange> get getSpeechRateValidRange =>
      (super.noSuchMethod(
            Invocation.getter(#getSpeechRateValidRange),
            returnValue: _i3.Future<_i7.SpeechRateValidRange>.value(
              _FakeSpeechRateValidRange_5(
                this,
                Invocation.getter(#getSpeechRateValidRange),
              ),
            ),
          )
          as _i3.Future<_i7.SpeechRateValidRange>);

  @override
  set startHandler(_i15.VoidCallback? _startHandler) => super.noSuchMethod(
    Invocation.setter(#startHandler, _startHandler),
    returnValueForMissingStub: null,
  );

  @override
  set initHandler(_i15.VoidCallback? _initHandler) => super.noSuchMethod(
    Invocation.setter(#initHandler, _initHandler),
    returnValueForMissingStub: null,
  );

  @override
  set completionHandler(_i15.VoidCallback? _completionHandler) =>
      super.noSuchMethod(
        Invocation.setter(#completionHandler, _completionHandler),
        returnValueForMissingStub: null,
      );

  @override
  set pauseHandler(_i15.VoidCallback? _pauseHandler) => super.noSuchMethod(
    Invocation.setter(#pauseHandler, _pauseHandler),
    returnValueForMissingStub: null,
  );

  @override
  set continueHandler(_i15.VoidCallback? _continueHandler) =>
      super.noSuchMethod(
        Invocation.setter(#continueHandler, _continueHandler),
        returnValueForMissingStub: null,
      );

  @override
  set cancelHandler(_i15.VoidCallback? _cancelHandler) => super.noSuchMethod(
    Invocation.setter(#cancelHandler, _cancelHandler),
    returnValueForMissingStub: null,
  );

  @override
  set progressHandler(_i7.ProgressHandler? _progressHandler) =>
      super.noSuchMethod(
        Invocation.setter(#progressHandler, _progressHandler),
        returnValueForMissingStub: null,
      );

  @override
  set errorHandler(_i7.ErrorHandler? _errorHandler) => super.noSuchMethod(
    Invocation.setter(#errorHandler, _errorHandler),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<dynamic> awaitSpeakCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
            Invocation.method(#awaitSpeakCompletion, [awaitCompletion]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> awaitSynthCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
            Invocation.method(#awaitSynthCompletion, [awaitCompletion]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> speak(String? text) =>
      (super.noSuchMethod(
            Invocation.method(#speak, [text]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> pause() =>
      (super.noSuchMethod(
            Invocation.method(#pause, []),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> synthesizeToFile(String? text, String? fileName) =>
      (super.noSuchMethod(
            Invocation.method(#synthesizeToFile, [text, fileName]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setLanguage(String? language) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguage, [language]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setSpeechRate(double? rate) =>
      (super.noSuchMethod(
            Invocation.method(#setSpeechRate, [rate]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setVolume(double? volume) =>
      (super.noSuchMethod(
            Invocation.method(#setVolume, [volume]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setSharedInstance(bool? sharedSession) =>
      (super.noSuchMethod(
            Invocation.method(#setSharedInstance, [sharedSession]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> autoStopSharedSession(bool? autoStop) =>
      (super.noSuchMethod(
            Invocation.method(#autoStopSharedSession, [autoStop]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setIosAudioCategory(
    _i7.IosTextToSpeechAudioCategory? category,
    List<_i7.IosTextToSpeechAudioCategoryOptions>? options, [
    _i7.IosTextToSpeechAudioMode? mode =
        _i7.IosTextToSpeechAudioMode.defaultMode,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#setIosAudioCategory, [category, options, mode]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setEngine(String? engine) =>
      (super.noSuchMethod(
            Invocation.method(#setEngine, [engine]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setPitch(double? pitch) =>
      (super.noSuchMethod(
            Invocation.method(#setPitch, [pitch]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setVoice(Map<String, String>? voice) =>
      (super.noSuchMethod(
            Invocation.method(#setVoice, [voice]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> stop() =>
      (super.noSuchMethod(
            Invocation.method(#stop, []),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> isLanguageAvailable(String? language) =>
      (super.noSuchMethod(
            Invocation.method(#isLanguageAvailable, [language]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> isLanguageInstalled(String? language) =>
      (super.noSuchMethod(
            Invocation.method(#isLanguageInstalled, [language]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> areLanguagesInstalled(List<String>? languages) =>
      (super.noSuchMethod(
            Invocation.method(#areLanguagesInstalled, [languages]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setSilence(int? timems) =>
      (super.noSuchMethod(
            Invocation.method(#setSilence, [timems]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setQueueMode(int? queueMode) =>
      (super.noSuchMethod(
            Invocation.method(#setQueueMode, [queueMode]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  void setStartHandler(_i15.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setStartHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setInitHandler(_i15.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setInitHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setCompletionHandler(_i15.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setCompletionHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setContinueHandler(_i15.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setContinueHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setPauseHandler(_i15.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setPauseHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setCancelHandler(_i15.VoidCallback? callback) => super.noSuchMethod(
    Invocation.method(#setCancelHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setProgressHandler(_i7.ProgressHandler? callback) => super.noSuchMethod(
    Invocation.method(#setProgressHandler, [callback]),
    returnValueForMissingStub: null,
  );

  @override
  void setErrorHandler(_i7.ErrorHandler? handler) => super.noSuchMethod(
    Invocation.method(#setErrorHandler, [handler]),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<dynamic> platformCallHandler(_i19.MethodCall? call) =>
      (super.noSuchMethod(
            Invocation.method(#platformCallHandler, [call]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);
}

/// A class which mocks [LanguagesProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguagesProvider extends _i1.Mock implements _i20.LanguagesProvider {
  MockLanguagesProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i21.Language> get languages =>
      (super.noSuchMethod(
            Invocation.getter(#languages),
            returnValue: <_i21.Language>[],
          )
          as List<_i21.Language>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i3.Future<void> getAllLanguages() =>
      (super.noSuchMethod(
            Invocation.method(#getAllLanguages, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  void addListener(_i15.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i15.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [LanguageRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguageRepositoryImpl extends _i1.Mock
    implements _i22.LanguageRepositoryImpl {
  MockLanguageRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i21.Language>> getAllLanguages() =>
      (super.noSuchMethod(
            Invocation.method(#getAllLanguages, []),
            returnValue: _i3.Future<List<_i21.Language>>.value(
              <_i21.Language>[],
            ),
          )
          as _i3.Future<List<_i21.Language>>);
}

/// A class which mocks [TrailRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrailRepositoryImpl extends _i1.Mock
    implements _i23.TrailRepositoryImpl {
  MockTrailRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> create(_i24.TrailRequest? trailRequest) =>
      (super.noSuchMethod(
            Invocation.method(#create, [trailRequest]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i25.Trail>> getAll() =>
      (super.noSuchMethod(
            Invocation.method(#getAll, []),
            returnValue: _i3.Future<List<_i25.Trail>>.value(<_i25.Trail>[]),
          )
          as _i3.Future<List<_i25.Trail>>);

  @override
  _i3.Future<_i8.TrailInfo> getById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getById, [id]),
            returnValue: _i3.Future<_i8.TrailInfo>.value(
              _FakeTrailInfo_6(this, Invocation.method(#getById, [id])),
            ),
          )
          as _i3.Future<_i8.TrailInfo>);
}
